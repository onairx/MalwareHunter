// Display result after pressing submit
function showCard() {
  var cardDiv = document.getElementById("cardDiv");
  cardDiv.style.display = "block";
}

//////////////////////////////////////////////////////////////////////////////////////////////////
/////newfile upload scan js for listed results
function calculateHash() {
  const fileInput = document.getElementById('fileInput');
  const file = fileInput.files[0];

  if (!file) {
    alert('Please select a file.');
    return;
  }

  const reader = new FileReader();

  reader.onload = function (event) {
    const fileContent = event.target.result;
    const hashHex = sha256(fileContent);

    // Construct URL with hashHex
    const url = `https://www.virustotal.com/api/v3/files/${hashHex}`;
    const apiKey = Your API key;

    fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Apikey': apiKey
      }
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        console.log(data.data);
        const lastAnalysisResults = data.data.attributes.last_analysis_results;

        // Get the container where you want to add this HTML
        var container = document.getElementById('container');

        // Clear the container
        container.innerHTML = '';

        // Generate HTML for each JSON data
        for (const engine in lastAnalysisResults) {
          const result = lastAnalysisResults[engine];
          var htmlCode = `<div>
                            <div class="virus-tabs" id="virus-tabs">
                              <div class="engine-name">
                                <p>${result.engine_name}</p>
                              </div>
                              <div class="virus-tabs-spaceline1"> 
                              </div>
                              <div class="virus-tabs-text-malicious">
                                <p>${result.category}</p>
                              </div>
                              <div class="virus-tabs-spaceline2"> 
                              </div>
                              <div class="engine-date">
                                <p>${result.engine_update}</p>
                              </div>
                            </div>
                          </div>`;
          container.insertAdjacentHTML('beforeend', htmlCode);
        }

        // Run the JavaScript to change card colors
        changeCardColors();
        // Changes the file type name in HTML
        const fileName = data.data.attributes.magic
        const changeFileName = document.querySelector(".head-texts-1-change");
        changeFileName.innerHTML = `${fileName}`;
        // Changes the Detection number in HTML
        const maliciousDetect = data.data.attributes.last_analysis_stats.malicious
        const changemaLiciousDetect = document.querySelector(".result-number-main");
        changemaLiciousDetect.innerHTML = `${maliciousDetect}`;
        const maliciousDetect1 = data.data.attributes.last_analysis_stats.malicious
        const changeMaliciousDetect1 = document.querySelector(".boxes-number");
        changeMaliciousDetect1.innerHTML = `${maliciousDetect1}`;
        const maliciousDetect2 = data.data.attributes.last_analysis_stats.malicious
        const changeMaliciousDetect2 = document.querySelector(".malicious-number");
        changeMaliciousDetect2.innerHTML = `${maliciousDetect2}`;

        // Change the Detection of suspisious number in HTML
        const suspiciousDetect = data.data.attributes.last_analysis_stats.suspicious
        const changeSuspiciousDetect = document.querySelector(".boxes-number1");
        changeSuspiciousDetect.innerHTML = `0${suspiciousDetect}`;
        // Change the Detection of harmless number in HTML
        const harmlessDetect = data.data.attributes.last_analysis_stats.harmless
        const changeHarmlessDetect = document.querySelector(".boxes-number2");
        changeHarmlessDetect.innerHTML = `0${harmlessDetect}`;
        const harmlessDetect1 = data.data.attributes.last_analysis_stats.harmless
        const changeHarmlessDetect1 = document.querySelector(".harmless-number");
        changeHarmlessDetect1.innerHTML = `0${harmlessDetect1}`;
        // Change the Detection of undetected number in HTML
        const unDetect = data.data.attributes.last_analysis_stats.undetected
        const changeUnDetect = document.querySelector(".boxes-number1");
        changeUnDetect.innerHTML = `0${unDetect}`;

        // Change the ID in HTML
        const idChange = data.data.id
        const changeIdChange = document.querySelector(".main-id");
        changeIdChange.innerHTML = `${idChange}`;

        // Change the reputation number in HTML
        const reputation = data.data.attributes.reputation
        const changeReputation = document.querySelector(".reputation-score-number");
        changeReputation.innerHTML = `${reputation}`;

        // Change the Sandbox name in HTML
        const sandboxName = data.data.attributes.sandbox_verdicts.Zenbox.sandbox_name
        const changeSandboxName = document.querySelector(".sandbox-thin-text");
        changeSandboxName.innerHTML = `${sandboxName}`;
        const confidence = data.data.attributes.sandbox_verdicts.Zenbox.confidence
        const changeConfidence = document.querySelector(".Confidence-percent");
        changeConfidence.innerHTML = `${confidence}%`;
        const malwareClass1 = data.data.attributes.sandbox_verdicts.Zenbox.malware_classification[0]
        const changeMalwareClass1 = document.querySelector(".sandbox-thin-text-red");
        changeMalwareClass1.innerHTML = `${malwareClass1}`;
        const malwareClass2 = data.data.attributes.sandbox_verdicts.Zenbox.malware_classification[1]
        const changeMalwareClass2 = document.querySelector(".sandbox-thin-text-red2");
        changeMalwareClass2.innerHTML = `, ${malwareClass2}`;

        // Change the SHA256 and md5 number in HTML
        const sha = data.data.attributes.sha256
        const changeSha = document.querySelector(".change-sha-value");
        changeSha.innerHTML = `${sha}`;
        const md5 = data.data.attributes.md5
        const changeMd5 = document.querySelector(".change-md5-value");
        changeMd5.innerHTML = `${md5}`;

        // Change last analysis and update date in HTML
        
        const ana = data.data.attributes.last_analysis_date
        var unixTimestamp = ana;
        var milliseconds = unixTimestamp * 1000;
        var date = new Date(milliseconds);
        var formattedDate = date.toLocaleString();
        const changeAna = document.querySelector(".last-analysis");
        changeAna.innerHTML = `${formattedDate}`;
        const mod = data.data.attributes.last_modification_date
        var unixTimestamp1 = mod;
        var milliseconds1 = unixTimestamp1 * 1000;
        var date1 = new Date(milliseconds1);
        var formattedDate1 = date1.toLocaleString();
        const changeMod = document.querySelector(".last-updated");
        changeMod.innerHTML = `${formattedDate1}`;
      })
      .catch(error => {
        console.error('There was a problem with the fetch operation:', error);
      });
  };

  reader.readAsArrayBuffer(file);
}
// Change color if it contains malicious in text
function changeCardColors() {
  let cards = document.querySelectorAll(".virus-tabs");

  cards.forEach(function (card) {
    let textElement = card.querySelector(".virus-tabs-text-malicious p");
    let redCard = card; // The card itself
    let whiteLine1 = card.querySelector(".virus-tabs-spaceline1");
    let whiteLine2 = card.querySelector(".virus-tabs-spaceline2");

    if (textElement && textElement.textContent.trim() === "malicious") {
      redCard.style.backgroundColor = "#B22E2E";
      whiteLine1.style.backgroundColor = "#FFFFFF";
      whiteLine2.style.backgroundColor = "#FFFFFF";
    }
  });
}
// File upload
function uploadFile() {
  var input = document.getElementById("inputBar");
  input.placeholder = "Please click the 'Submit' button to view the results of the uploaded file.";
  document.getElementById('fileInput').click();
  document.getElementById('fileInput').addEventListener('change', calculateHash);
  let uploadBtn = document.getElementById("uploadBtn");
  uploadBtn.style.backgroundColor = "#1A8FFC";
  uploadBtn.style.display = "block";
}
//////////////////////////////////////////////////////////////////////////////////////////////////
// Change text in search bar
function changePlaceholder() {
    var input = document.getElementById("inputBar");
    input.placeholder = 'URL, IP address, domain or file hash';
}
//////////////////////////////////////////////////////////////////////////////////////////////////
const apiKey1 = Your API key;
// Function to fetch IP address from URL
function fetchIPAddress(url) {
  return fetch(`https://ipinfo.io/${url}/json?token=${apiKey1}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      return data.ip; // Return the IP address
    })
    .catch(error => {
      console.error('There was a problem with the fetch operation:', error);
    });
}
// Function to fetch data from VirusTotal API
const apiKey2 = Your API key;
function fetchDataFromVirusTotal(ipAddress) {
  fetch(`https://www.virustotal.com/api/v3/ip_addresses/${ipAddress}`, {
    method: 'GET',
    headers: {
      'Accept': 'application/json',
      'X-Apikey': apiKey2
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    console.log("url")
    console.log(data.data);
    const lastAnalysisResults = data.data.attributes.last_analysis_results;

    // Get the container where you want to add this HTML
    var container = document.getElementById('container');

    // Clear the container
    container.innerHTML = '';

    // Generate HTML for each JSON data
    for (const engine in lastAnalysisResults) {
      const result = lastAnalysisResults[engine];
      var htmlCode = `<div>
                        <div class="virus-tabs" id="virus-tabs">
                          <div class="engine-name">
                            <p>${result.engine_name}</p>
                          </div>
                          <div class="virus-tabs-spaceline1"> 
                          </div>
                          <div class="virus-tabs-text-malicious">
                            <p>${result.category}</p>
                          </div>
                          <div class="virus-tabs-spaceline2"> 
                          </div>
                          <div class="engine-date">
                            <p>${result.result}</p>
                          </div>
                        </div>
                      </div>`;
      container.insertAdjacentHTML('beforeend', htmlCode);
    }

    // Run the JavaScript to change card colors
    changeCardColors();
    // Changes the file type name in HTML
    const fileName = data.data.attributes.as_owner
    const changeFileName = document.querySelector(".head-texts-1-change");
    changeFileName.innerHTML = `${fileName}`;
    // Changes the Detection number in HTML
    const maliciousDetect = data.data.attributes.last_analysis_stats.malicious
    const changemaLiciousDetect = document.querySelector(".result-number-main");
    changemaLiciousDetect.innerHTML = `${maliciousDetect}`;
    const maliciousDetect1 = data.data.attributes.last_analysis_stats.malicious
    const changeMaliciousDetect1 = document.querySelector(".boxes-number");
    changeMaliciousDetect1.innerHTML = `${maliciousDetect1}`;
    const maliciousDetect2 = data.data.attributes.last_analysis_stats.malicious
    const changeMaliciousDetect2 = document.querySelector(".malicious-number");
    changeMaliciousDetect2.innerHTML = `${maliciousDetect2}`;

    // Change the Detection of suspisious number in HTML
    const suspiciousDetect = data.data.attributes.last_analysis_stats.suspicious
    const changeSuspiciousDetect = document.querySelector(".boxes-number1");
    changeSuspiciousDetect.innerHTML = `0${suspiciousDetect}`;
    // Change the Detection of harmless number in HTML
    const harmlessDetect = data.data.attributes.last_analysis_stats.harmless
    const changeHarmlessDetect = document.querySelector(".boxes-number2");
    changeHarmlessDetect.innerHTML = `0${harmlessDetect}`;
    const harmlessDetect1 = data.data.attributes.last_analysis_stats.harmless
    const changeHarmlessDetect1 = document.querySelector(".harmless-number");
    changeHarmlessDetect1.innerHTML = `0${harmlessDetect1}`;
    // Change the Detection of undetected number in HTML
    const unDetect = data.data.attributes.last_analysis_stats.undetected
    const changeUnDetect = document.querySelector(".boxes-number1");
    changeUnDetect.innerHTML = `0${unDetect}`;

    // Change the ID in HTML
    const idChange = data.data.id
    const changeIdChange = document.querySelector(".main-id");
    changeIdChange.innerHTML = `${idChange}`;

    // Change the reputation number in HTML
    const reputation = data.data.attributes.reputation
    const changeReputation = document.querySelector(".reputation-score-number");
    changeReputation.innerHTML = `${reputation}`;
    // Change last analysis and update date in HTML
    
    const ana = data.data.attributes.last_analysis_date
    var unixTimestamp3 = ana;
    var milliseconds3 = unixTimestamp3 * 1000;
    var date3 = new Date(milliseconds3);
    var formattedDate3 = date3.toLocaleString();
    const changeAna = document.querySelector(".last-analysis");
    changeAna.innerHTML = `${formattedDate3}`;
    const mod = data.data.attributes.last_modification_date
    var unixTimestamp4 = mod;
    var milliseconds4 = unixTimestamp4 * 1000;
    var date4 = new Date(milliseconds4);
    var formattedDate4 = date4.toLocaleString();
    const changeMod = document.querySelector(".last-updated");
    changeMod.innerHTML = `${formattedDate4}`;
  })
  .catch(error => {
    console.error('There was a problem with the fetch operation:', error);
  });
}
// Function to be called when the submit button is clicked
function urlIp() {
  const urlInput = document.getElementById('inputBar');
  const url = urlInput.value.trim(); // Get the value of the input and remove leading/trailing spaces

  // Make sure the input is not empty
  if (url !== '') {
    fetchIPAddress(url)
      .then(ipAddress => {
        if (ipAddress !== '') {
          fetchDataFromVirusTotal(ipAddress);
          console.log("only IP")
        } else {
          console.error('IP address not found for the given URL');
        }
      });
  } else {
    console.error('Please enter a valid URL');
  }
}
////////////////////////////////////////////////////////////////////////////////////////////////
// Domain result
function submitDomain() {
    const apiKey = Your API key;
    const domain = document.getElementById('inputBar').value.trim(); // Get the domain from the input field
    const url = `https://www.virustotal.com/api/v3/domains/${domain}`;
  
    fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Apikey': apiKey
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      // Display the response data in the console
      console.log(data.data);
      const lastAnalysisResults = data.data.attributes.last_analysis_results;

      // Get the container where you want to add this HTML
      var container = document.getElementById('container');
  
      // Clear the container
      container.innerHTML = '';
  
      // Generate HTML for each JSON data
      for (const engine in lastAnalysisResults) {
        const result = lastAnalysisResults[engine];
        var htmlCode = `<div>
                          <div class="virus-tabs" id="virus-tabs">
                            <div class="engine-name">
                              <p>${result.engine_name}</p>
                            </div>
                            <div class="virus-tabs-spaceline1"> 
                            </div>
                            <div class="virus-tabs-text-malicious">
                              <p>${result.category}</p>
                            </div>
                            <div class="virus-tabs-spaceline2"> 
                            </div>
                            <div class="engine-date">
                              <p>${result.result}</p>
                            </div>
                          </div>
                        </div>`;
        container.insertAdjacentHTML('beforeend', htmlCode);
      }
  
      // Run the JavaScript to change card colors
      changeCardColors();
      // Changes the file type name in HTML
      const fileName = data.data.attributes.categories.BitDefender
      const changeFileName = document.querySelector(".head-texts-1-change");
      changeFileName.innerHTML = `${fileName}`;
      // Changes the Detection number in HTML
      const maliciousDetect = data.data.attributes.last_analysis_stats.malicious
      const changemaLiciousDetect = document.querySelector(".result-number-main");
      changemaLiciousDetect.innerHTML = `${maliciousDetect}`;
      const maliciousDetect1 = data.data.attributes.last_analysis_stats.malicious
      const changeMaliciousDetect1 = document.querySelector(".boxes-number");
      changeMaliciousDetect1.innerHTML = `${maliciousDetect1}`;
      const maliciousDetect2 = data.data.attributes.last_analysis_stats.malicious
      const changeMaliciousDetect2 = document.querySelector(".malicious-number");
      changeMaliciousDetect2.innerHTML = `${maliciousDetect2}`;
  
      // Change the Detection of suspisious number in HTML
      const suspiciousDetect = data.data.attributes.last_analysis_stats.suspicious
      const changeSuspiciousDetect = document.querySelector(".boxes-number1");
      changeSuspiciousDetect.innerHTML = `0${suspiciousDetect}`;
      // Change the Detection of harmless number in HTML
      const harmlessDetect = data.data.attributes.last_analysis_stats.harmless
      const changeHarmlessDetect = document.querySelector(".boxes-number2");
      changeHarmlessDetect.innerHTML = `0${harmlessDetect}`;
      const harmlessDetect1 = data.data.attributes.last_analysis_stats.harmless
      const changeHarmlessDetect1 = document.querySelector(".harmless-number");
      changeHarmlessDetect1.innerHTML = `0${harmlessDetect1}`;
      // Change the Detection of undetected number in HTML
      const unDetect = data.data.attributes.last_analysis_stats.undetected
      const changeUnDetect = document.querySelector(".boxes-number1");
      changeUnDetect.innerHTML = `0${unDetect}`;
  
      // Change the ID in HTML
      const idChange = data.data.id
      const changeIdChange = document.querySelector(".main-id");
      changeIdChange.innerHTML = `${idChange}`;
  
      // Change the reputation number in HTML
      const reputation = data.data.attributes.reputation
      const changeReputation = document.querySelector(".reputation-score-number");
      changeReputation.innerHTML = `${reputation}`;
      // Change last analysis and update date in HTML
      
      const ana = data.data.attributes.last_analysis_date
      var unixTimestamp3 = ana;
      var milliseconds3 = unixTimestamp3 * 1000;
      var date3 = new Date(milliseconds3);
      var formattedDate3 = date3.toLocaleString();
      const changeAna = document.querySelector(".last-analysis");
      changeAna.innerHTML = `${formattedDate3}`;
      const mod = data.data.attributes.last_modification_date
      var unixTimestamp4 = mod;
      var milliseconds4 = unixTimestamp4 * 1000;
      var date4 = new Date(milliseconds4);
      var formattedDate4 = date4.toLocaleString();
      const changeMod = document.querySelector(".last-updated");
      changeMod.innerHTML = `${formattedDate4}`;
    })
    .catch(error => {
      // Handle any errors that occurred during the fetch
      console.error('Fetch error:', error);
    });
}
//////////////////////////////////////////////////////////////////////////////////////////////
// Only hash result
function submitHash() {
    const apiKey = Your API key;
    const inputBar = document.getElementById('inputBar');
    const fileHash = inputBar.value;
    const apiUrl = `https://www.virustotal.com/api/v3/files/${fileHash}`;
  
    fetch(apiUrl, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Apikey': apiKey
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      console.log(data.data);
      const lastAnalysisResults = data.data.attributes.last_analysis_results;

        // Get the container where you want to add this HTML
        var container = document.getElementById('container');

        // Clear the container
        container.innerHTML = '';

        // Generate HTML for each JSON data
        for (const engine in lastAnalysisResults) {
          const result = lastAnalysisResults[engine];
          var htmlCode = `<div>
                            <div class="virus-tabs" id="virus-tabs">
                              <div class="engine-name">
                                <p>${result.engine_name}</p>
                              </div>
                              <div class="virus-tabs-spaceline1"> 
                              </div>
                              <div class="virus-tabs-text-malicious">
                                <p>${result.category}</p>
                              </div>
                              <div class="virus-tabs-spaceline2"> 
                              </div>
                              <div class="engine-date">
                                <p>${result.engine_update}</p>
                              </div>
                            </div>
                          </div>`;
          container.insertAdjacentHTML('beforeend', htmlCode);
        }

        // Run the JavaScript to change card colors
        changeCardColors();
        // Changes the file type name in HTML
        const fileName = data.data.attributes.magic
        const changeFileName = document.querySelector(".head-texts-1-change");
        changeFileName.innerHTML = `${fileName}`;
        // Changes the Detection number in HTML
        const maliciousDetect = data.data.attributes.last_analysis_stats.malicious
        const changemaLiciousDetect = document.querySelector(".result-number-main");
        changemaLiciousDetect.innerHTML = `${maliciousDetect}`;
        const maliciousDetect1 = data.data.attributes.last_analysis_stats.malicious
        const changeMaliciousDetect1 = document.querySelector(".boxes-number");
        changeMaliciousDetect1.innerHTML = `${maliciousDetect1}`;
        const maliciousDetect2 = data.data.attributes.last_analysis_stats.malicious
        const changeMaliciousDetect2 = document.querySelector(".malicious-number");
        changeMaliciousDetect2.innerHTML = `${maliciousDetect2}`;

        // Change the Detection of suspisious number in HTML
        const suspiciousDetect = data.data.attributes.last_analysis_stats.suspicious
        const changeSuspiciousDetect = document.querySelector(".boxes-number1");
        changeSuspiciousDetect.innerHTML = `0${suspiciousDetect}`;
        // Change the Detection of harmless number in HTML
        const harmlessDetect = data.data.attributes.last_analysis_stats.harmless
        const changeHarmlessDetect = document.querySelector(".boxes-number2");
        changeHarmlessDetect.innerHTML = `0${harmlessDetect}`;
        const harmlessDetect1 = data.data.attributes.last_analysis_stats.harmless
        const changeHarmlessDetect1 = document.querySelector(".harmless-number");
        changeHarmlessDetect1.innerHTML = `0${harmlessDetect1}`;
        // Change the Detection of undetected number in HTML
        const unDetect = data.data.attributes.last_analysis_stats.undetected
        const changeUnDetect = document.querySelector(".boxes-number1");
        changeUnDetect.innerHTML = `0${unDetect}`;

        // Change the ID in HTML
        const idChange = data.data.id
        const changeIdChange = document.querySelector(".main-id");
        changeIdChange.innerHTML = `${idChange}`;

        // Change the reputation number in HTML
        const reputation = data.data.attributes.reputation
        const changeReputation = document.querySelector(".reputation-score-number");
        changeReputation.innerHTML = `${reputation}`;

        // Change the Sandbox name in HTML
        const sandboxName = data.data.attributes.sandbox_verdicts.Zenbox.sandbox_name
        const changeSandboxName = document.querySelector(".sandbox-thin-text");
        changeSandboxName.innerHTML = `${sandboxName}`;
        const confidence = data.data.attributes.sandbox_verdicts.Zenbox.confidence
        const changeConfidence = document.querySelector(".Confidence-percent");
        changeConfidence.innerHTML = `${confidence}%`;
        const malwareClass1 = data.data.attributes.sandbox_verdicts.Zenbox.malware_classification[0]
        const changeMalwareClass1 = document.querySelector(".sandbox-thin-text-red");
        changeMalwareClass1.innerHTML = `${malwareClass1}`;
        const malwareClass2 = data.data.attributes.sandbox_verdicts.Zenbox.malware_classification[1]
        const changeMalwareClass2 = document.querySelector(".sandbox-thin-text-red2");
        changeMalwareClass2.innerHTML = `, ${malwareClass2}`;

        // Change the SHA256 and md5 number in HTML
        const sha = data.data.attributes.sha256
        const changeSha = document.querySelector(".change-sha-value");
        changeSha.innerHTML = `${sha}`;
        const md5 = data.data.attributes.md5
        const changeMd5 = document.querySelector(".change-md5-value");
        changeMd5.innerHTML = `${md5}`;

        // Change last analysis and update date in HTML
        
        const ana = data.data.attributes.last_analysis_date
        var unixTimestamp = ana;
        var milliseconds = unixTimestamp * 1000;
        var date = new Date(milliseconds);
        var formattedDate = date.toLocaleString();
        const changeAna = document.querySelector(".last-analysis");
        changeAna.innerHTML = `${formattedDate}`;
        const mod = data.data.attributes.last_modification_date
        var unixTimestamp1 = mod;
        var milliseconds1 = unixTimestamp1 * 1000;
        var date1 = new Date(milliseconds1);
        var formattedDate1 = date1.toLocaleString();
        const changeMod = document.querySelector(".last-updated");
        changeMod.innerHTML = `${formattedDate1}`;
    })
    .catch(error => {
      console.error('There was a problem with the fetch operation:', error);
    });
}  



